{
	"info": {
		"_postman_id": "r1e2w3a4-r5d6-7890-abcd-rewardapi1234",
		"name": "Reward API Collection",
		"description": "Complete API collection for testing customer reward system endpoints. All endpoints tested and working with sample data.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Get Customer Rewards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains rewards data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.be.an('object');",
							"    pm.expect(jsonData.data.rewards).to.be.an('array');",
							"    pm.expect(jsonData.data.total_points).to.be.a('number');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-customer-id",
						"value": "1",
						"description": "Customer ID for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/rewards?page=1&limit=10&sort=date_added&order=DESC",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"rewards"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"description": "Page number (default: 1)"
						},
						{
							"key": "limit",
							"value": "10",
							"description": "Items per page (default: 10, max: 100)"
						},
						{
							"key": "sort",
							"value": "date_added",
							"description": "Sort field: points, description, date_added, order_id (default: date_added)"
						},
						{
							"key": "order",
							"value": "DESC",
							"description": "Sort order: ASC, DESC (default: DESC)"
						}
					]
				},
				"description": "Get paginated list of customer rewards with sorting options. Returns rewards array, total points, and pagination info."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "1"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/rewards?page=1&limit=10&sort=date_added&order=DESC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"rewards"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "date_added"
								},
								{
									"key": "order",
									"value": "DESC"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"data\": {\n        \"rewards\": [\n            {\n                \"customer_reward_id\": 6,\n                \"customer_id\": 1,\n                \"order_id\": 999,\n                \"description\": \"Test reward from API\",\n                \"points\": 75,\n                \"date_added\": \"2024-01-15T10:30:00.000Z\"\n            },\n            {\n                \"customer_reward_id\": 4,\n                \"customer_id\": 1,\n                \"order_id\": 456,\n                \"description\": \"Product review bonus\",\n                \"points\": 25,\n                \"date_added\": \"2024-01-10T14:20:00.000Z\"\n            }\n        ],\n        \"total_points\": 280,\n        \"pagination\": {\n            \"current_page\": 1,\n            \"total_pages\": 1,\n            \"total_items\": 5,\n            \"items_per_page\": 10\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "Get Total Reward Points",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains total points\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.total_points).to.be.a('number');",
							"    pm.expect(jsonData.data.customer_id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-customer-id",
						"value": "1",
						"description": "Customer ID for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/rewards/total",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"rewards",
						"total"
					]
				},
				"description": "Get customer's total reward points accumulated across all transactions."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "1"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/rewards/total",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"rewards",
								"total"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"data\": {\n        \"customer_id\": 1,\n        \"total_points\": 280\n    }\n}"
				}
			]
		},
		{
			"name": "Get Reward Statistics",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains statistics\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.total_points).to.be.a('number');",
							"    pm.expect(jsonData.data.total_entries).to.be.a('number');",
							"    pm.expect(jsonData.data.average_points_per_entry).to.be.a('number');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-customer-id",
						"value": "1",
						"description": "Customer ID for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/rewards/stats",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"rewards",
						"stats"
					]
				},
				"description": "Get comprehensive reward statistics including total points, number of entries, and average points per entry."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "1"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/rewards/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"rewards",
								"stats"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"data\": {\n        \"customer_id\": 1,\n        \"total_points\": 205,\n        \"total_entries\": 4,\n        \"average_points_per_entry\": 51.25\n    }\n}"
				}
			]
		},
		{
			"name": "Get Rewards by Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains order rewards\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.be.an('object');",
							"    pm.expect(jsonData.data.order_id).to.be.a('number');",
							"    pm.expect(jsonData.data.rewards).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-customer-id",
						"value": "1",
						"description": "Customer ID for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/rewards/order/123",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"rewards",
						"order",
						"123"
					]
				},
				"description": "Get all reward entries associated with a specific order ID. Useful for tracking rewards earned from particular purchases."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "1"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/rewards/order/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"rewards",
								"order",
								"123"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"data\": {\n        \"order_id\": 123,\n        \"customer_id\": 1,\n        \"rewards\": [\n            {\n                \"customer_reward_id\": 1,\n                \"customer_id\": 1,\n                \"order_id\": 123,\n                \"description\": \"Welcome bonus for new customer\",\n                \"points\": 100,\n                \"date_added\": \"2024-01-01T12:00:00.000Z\"\n            }\n        ],\n        \"total_points_for_order\": 100\n    }\n}"
				}
			]
		},
		{
			"name": "Add Reward Points",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains reward data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.be.an('object');",
							"    pm.expect(jsonData.data.customer_reward_id).to.be.a('number');",
							"    pm.expect(jsonData.data.points).to.be.a('number');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-customer-id",
						"value": "1",
						"description": "Customer ID for authentication"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"order_id\": 999,\n    \"description\": \"Test reward from API\",\n    \"points\": 75\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/rewards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"rewards"
					]
				},
				"description": "Add reward points for a customer. The order_id field is optional - if not provided, the reward will be recorded without an associated order."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "x-customer-id",
								"value": "1"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": 999,\n    \"description\": \"Test reward from API\",\n    \"points\": 75\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/rewards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"rewards"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"message\": \"Reward points added successfully\",\n    \"data\": {\n        \"customer_reward_id\": 6,\n        \"customer_id\": 1,\n        \"order_id\": 999,\n        \"description\": \"Test reward from API\",\n        \"points\": 75,\n        \"date_added\": \"2024-01-15T10:30:00.000Z\"\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script for all reward API calls",
					"console.log('Testing Reward API endpoint: ' + pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for all reward API calls",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"pm.test('Response has Content-Type header', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "customerId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "testOrderId",
			"value": "123",
			"type": "string"
		}
	]
}